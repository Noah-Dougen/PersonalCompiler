
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN COMMENT ID INT LBRACE LPAREN MLCOMMENT NEWLINE NUM PLUS RBRACE READ RPAREN SEMICOLON TIMES WRITE\n    program : block\n    \n    block : LBRACE action_new_scope stmt_list RBRACE\n    \n    action_new_scope :\n    \n    stmt_list : stmt_list stmt\n    \n    stmt_list : \n    \n    stmt : type ID SEMICOLON\n    \n    stmt : ID ASSIGN expr SEMICOLON\n    \n    stmt : block\n    \n    stmt : READ ID SEMICOLON\n    \n    stmt : WRITE expr SEMICOLON\n    \n    type : INT\n    \n    expr : expr PLUS term\n    \n    expr : term\n    \n    term : term TIMES factor\n    \n    term : factor\n    \n    factor : ID \n    \n    factor : NUM\n    \n    factor : LPAREN expr RPAREN\n    '
    
_lr_action_items = {'LBRACE':([0,3,4,5,6,7,10,23,25,26,30,],[3,-3,-5,3,-2,-4,-8,-6,-9,-10,-7,]),'$end':([1,2,6,],[0,-1,-2,]),'RBRACE':([3,4,5,6,7,10,23,25,26,30,],[-3,-5,6,-2,-4,-8,-6,-9,-10,-7,]),'ID':([3,4,5,6,7,8,10,11,12,13,15,22,23,25,26,27,28,30,],[-3,-5,9,-2,-4,14,-8,16,20,-11,20,20,-6,-9,-10,20,20,-7,]),'READ':([3,4,5,6,7,10,23,25,26,30,],[-3,-5,11,-2,-4,-8,-6,-9,-10,-7,]),'WRITE':([3,4,5,6,7,10,23,25,26,30,],[-3,-5,12,-2,-4,-8,-6,-9,-10,-7,]),'INT':([3,4,5,6,7,10,23,25,26,30,],[-3,-5,13,-2,-4,-8,-6,-9,-10,-7,]),'ASSIGN':([9,],[15,]),'NUM':([12,15,22,27,28,],[21,21,21,21,21,]),'LPAREN':([12,15,22,27,28,],[22,22,22,22,22,]),'SEMICOLON':([14,16,17,18,19,20,21,24,31,32,33,],[23,25,26,-13,-15,-16,-17,30,-12,-14,-18,]),'PLUS':([17,18,19,20,21,24,29,31,32,33,],[27,-13,-15,-16,-17,27,27,-12,-14,-18,]),'RPAREN':([18,19,20,21,29,31,32,33,],[-13,-15,-16,-17,33,-12,-14,-18,]),'TIMES':([18,19,20,21,31,32,33,],[28,-15,-16,-17,28,-14,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([0,5,],[2,10,]),'action_new_scope':([3,],[4,]),'stmt_list':([4,],[5,]),'stmt':([5,],[7,]),'type':([5,],[8,]),'expr':([12,15,22,],[17,24,29,]),'term':([12,15,22,27,],[18,18,18,31,]),'factor':([12,15,22,27,28,],[19,19,19,19,32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block','program',1,'p_program','LastLighthouse_parser.py',64),
  ('block -> LBRACE action_new_scope stmt_list RBRACE','block',4,'p_block','LastLighthouse_parser.py',71),
  ('action_new_scope -> <empty>','action_new_scope',0,'p_action_new_scope','LastLighthouse_parser.py',82),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list','LastLighthouse_parser.py',96),
  ('stmt_list -> <empty>','stmt_list',0,'p_stmt_list_empty','LastLighthouse_parser.py',104),
  ('stmt -> type ID SEMICOLON','stmt',3,'p_stmt_decl','LastLighthouse_parser.py',112),
  ('stmt -> ID ASSIGN expr SEMICOLON','stmt',4,'p_stmt_assign','LastLighthouse_parser.py',131),
  ('stmt -> block','stmt',1,'p_stmt_block','LastLighthouse_parser.py',147),
  ('stmt -> READ ID SEMICOLON','stmt',3,'p_stmt_read','LastLighthouse_parser.py',154),
  ('stmt -> WRITE expr SEMICOLON','stmt',3,'p_stmt_write','LastLighthouse_parser.py',170),
  ('type -> INT','type',1,'p_type','LastLighthouse_parser.py',178),
  ('expr -> expr PLUS term','expr',3,'p_expr_plus','LastLighthouse_parser.py',186),
  ('expr -> term','expr',1,'p_expr_term','LastLighthouse_parser.py',192),
  ('term -> term TIMES factor','term',3,'p_term_times','LastLighthouse_parser.py',200),
  ('term -> factor','term',1,'p_term_factor','LastLighthouse_parser.py',206),
  ('factor -> ID','factor',1,'p_factor_id','LastLighthouse_parser.py',214),
  ('factor -> NUM','factor',1,'p_factor_num','LastLighthouse_parser.py',231),
  ('factor -> LPAREN expr RPAREN','factor',3,'p_factor_parens','LastLighthouse_parser.py',238),
]
