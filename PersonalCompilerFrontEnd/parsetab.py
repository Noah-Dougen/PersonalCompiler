
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN COMMENT DIVIDE ELSE EQUALTO GREATEQUAL GREATERTHAN ID IF INT LBRACE LESSEQUAL LESSTHAN LPAREN MINUS MLCOMMENT MODULUS NEWLINE NOTEQUAL NUM OR PLUS RBRACE READ RPAREN SEMICOLON TIMES UNARYNOT WHILE WRITE\n    program : block\n    \n    block : LBRACE action_new_scope stmt_list RBRACE\n    \n    action_new_scope :\n    \n    stmt_list : stmt_list stmt\n    \n    stmt_list : \n    \n    stmt : type ID SEMICOLON\n    \n    stmt : ID ASSIGN lowop SEMICOLON\n    \n    stmt : block\n    \n    stmt : READ ID SEMICOLON\n    \n    stmt : WRITE lowop SEMICOLON\n    \n    stmt : IF lowop LPAREN stmt optelse RPAREN\n    \n    stmt : WHILE lowop LPAREN stmt RPAREN\n    \n    stmt : lowop\n    \n    stmt : comment\n    \n    optelse : ELSE LPAREN stmt RPAREN\n    \n    optelse : \n    \n    type : INT\n    \n    lowop : lowop AND equal\n    \n    lowop : lowop OR equal\n    \n    lowop : equal\n    \n    lowop : equal EQUALTO op\n    \n    equal : equal NOTEQUAL op\n    \n    equal : op\n    \n    op : op LESSTHAN expr\n    \n    op : op GREATERTHAN expr\n    \n    op : op LESSEQUAL expr\n    \n    op : op GREATEQUAL expr\n    \n    op : expr\n    \n    expr : expr PLUS term\n    \n    expr : expr MINUS term\n    \n    expr : term\n    \n    term : term TIMES factor\n    \n    term : term DIVIDE factor\n    \n    term : term MODULUS factor\n    \n    term : factor\n    \n    factor : MINUS factor\n    \n    factor : UNARYNOT factor\n    \n    factor : ID \n    \n    factor : NUM\n    \n    factor : LPAREN lowop RPAREN\n    \n    comment : COMMENT\n    \n    comment : MLCOMMENT \n    '
    
_lr_action_items = {'LBRACE':([0,3,4,5,6,7,9,10,11,17,19,20,21,22,23,24,26,28,35,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,78,79,],[3,-3,-5,3,-2,-4,-38,-13,-8,-14,-20,-23,-41,-42,-28,-31,-35,-39,-38,-36,-37,-6,-18,-19,-9,-10,3,-40,3,-21,-22,-24,-25,-26,-27,-29,-30,-32,-33,-34,-7,-12,-11,3,]),'$end':([1,2,6,],[0,-1,-2,]),'RBRACE':([3,4,5,6,7,9,10,11,17,19,20,21,22,23,24,26,28,35,50,51,52,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,72,77,78,],[-3,-5,6,-2,-4,-38,-13,-8,-14,-20,-23,-41,-42,-28,-31,-35,-39,-38,-36,-37,-6,-18,-19,-9,-10,-40,-21,-22,-24,-25,-26,-27,-29,-30,-32,-33,-34,-7,-12,-11,]),'ID':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,78,79,],[-3,-5,9,-2,-4,29,-38,-13,-8,33,35,35,35,35,-14,-17,-20,-23,-41,-42,-28,-31,35,-35,35,-39,35,35,35,-38,35,35,35,35,35,35,35,35,35,35,35,-36,-37,-6,-18,-19,-9,-10,9,-40,9,-21,-22,-24,-25,-26,-27,-29,-30,-32,-33,-34,-7,-12,-11,9,]),'READ':([3,4,5,6,7,9,10,11,17,19,20,21,22,23,24,26,28,35,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,78,79,],[-3,-5,12,-2,-4,-38,-13,-8,-14,-20,-23,-41,-42,-28,-31,-35,-39,-38,-36,-37,-6,-18,-19,-9,-10,12,-40,12,-21,-22,-24,-25,-26,-27,-29,-30,-32,-33,-34,-7,-12,-11,12,]),'WRITE':([3,4,5,6,7,9,10,11,17,19,20,21,22,23,24,26,28,35,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,78,79,],[-3,-5,13,-2,-4,-38,-13,-8,-14,-20,-23,-41,-42,-28,-31,-35,-39,-38,-36,-37,-6,-18,-19,-9,-10,13,-40,13,-21,-22,-24,-25,-26,-27,-29,-30,-32,-33,-34,-7,-12,-11,13,]),'IF':([3,4,5,6,7,9,10,11,17,19,20,21,22,23,24,26,28,35,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,78,79,],[-3,-5,14,-2,-4,-38,-13,-8,-14,-20,-23,-41,-42,-28,-31,-35,-39,-38,-36,-37,-6,-18,-19,-9,-10,14,-40,14,-21,-22,-24,-25,-26,-27,-29,-30,-32,-33,-34,-7,-12,-11,14,]),'WHILE':([3,4,5,6,7,9,10,11,17,19,20,21,22,23,24,26,28,35,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,78,79,],[-3,-5,16,-2,-4,-38,-13,-8,-14,-20,-23,-41,-42,-28,-31,-35,-39,-38,-36,-37,-6,-18,-19,-9,-10,16,-40,16,-21,-22,-24,-25,-26,-27,-29,-30,-32,-33,-34,-7,-12,-11,16,]),'INT':([3,4,5,6,7,9,10,11,17,19,20,21,22,23,24,26,28,35,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,78,79,],[-3,-5,18,-2,-4,-38,-13,-8,-14,-20,-23,-41,-42,-28,-31,-35,-39,-38,-36,-37,-6,-18,-19,-9,-10,18,-40,18,-21,-22,-24,-25,-26,-27,-29,-30,-32,-33,-34,-7,-12,-11,18,]),'COMMENT':([3,4,5,6,7,9,10,11,17,19,20,21,22,23,24,26,28,35,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,78,79,],[-3,-5,21,-2,-4,-38,-13,-8,-14,-20,-23,-41,-42,-28,-31,-35,-39,-38,-36,-37,-6,-18,-19,-9,-10,21,-40,21,-21,-22,-24,-25,-26,-27,-29,-30,-32,-33,-34,-7,-12,-11,21,]),'MLCOMMENT':([3,4,5,6,7,9,10,11,17,19,20,21,22,23,24,26,28,35,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,78,79,],[-3,-5,22,-2,-4,-38,-13,-8,-14,-20,-23,-41,-42,-28,-31,-35,-39,-38,-36,-37,-6,-18,-19,-9,-10,22,-40,22,-21,-22,-24,-25,-26,-27,-29,-30,-32,-33,-34,-7,-12,-11,22,]),'MINUS':([3,4,5,6,7,9,10,11,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,30,31,32,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,78,79,],[-3,-5,25,-2,-4,-38,-13,-8,25,25,25,25,-14,-20,-23,-41,-42,46,-31,25,-35,25,-39,25,25,25,-38,25,25,25,25,25,25,25,25,25,25,25,-36,-37,-6,-18,-19,-9,-10,25,-40,25,-21,-22,46,46,46,46,-29,-30,-32,-33,-34,-7,-12,-11,25,]),'UNARYNOT':([3,4,5,6,7,9,10,11,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,30,31,32,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,78,79,],[-3,-5,27,-2,-4,-38,-13,-8,27,27,27,27,-14,-20,-23,-41,-42,-28,-31,27,-35,27,-39,27,27,27,-38,27,27,27,27,27,27,27,27,27,27,27,-36,-37,-6,-18,-19,-9,-10,27,-40,27,-21,-22,-24,-25,-26,-27,-29,-30,-32,-33,-34,-7,-12,-11,27,]),'NUM':([3,4,5,6,7,9,10,11,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,30,31,32,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,78,79,],[-3,-5,28,-2,-4,-38,-13,-8,28,28,28,28,-14,-20,-23,-41,-42,-28,-31,28,-35,28,-39,28,28,28,-38,28,28,28,28,28,28,28,28,28,28,28,-36,-37,-6,-18,-19,-9,-10,28,-40,28,-21,-22,-24,-25,-26,-27,-29,-30,-32,-33,-34,-7,-12,-11,28,]),'LPAREN':([3,4,5,6,7,9,10,11,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,30,31,32,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,77,78,79,],[-3,-5,15,-2,-4,-38,-13,-8,15,15,15,15,-14,-20,-23,-41,-42,-28,-31,15,-35,15,-39,15,15,15,-38,58,60,15,15,15,15,15,15,15,15,15,15,15,-36,-37,-6,-18,-19,-9,-10,15,-40,15,-21,-22,-24,-25,-26,-27,-29,-30,-32,-33,-34,-7,79,-12,-11,15,]),'ELSE':([6,9,10,11,17,19,20,21,22,23,24,26,28,35,50,51,52,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,72,73,77,78,],[-2,-38,-13,-8,-14,-20,-23,-41,-42,-28,-31,-35,-39,-38,-36,-37,-6,-18,-19,-9,-10,-40,-21,-22,-24,-25,-26,-27,-29,-30,-32,-33,-34,-7,76,-12,-11,]),'RPAREN':([6,9,10,11,17,19,20,21,22,23,24,26,28,35,37,50,51,52,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,80,81,],[-2,-38,-13,-8,-14,-20,-23,-41,-42,-28,-31,-35,-39,-38,59,-36,-37,-6,-18,-19,-9,-10,-40,-21,-22,-24,-25,-26,-27,-29,-30,-32,-33,-34,-7,-16,77,78,-12,-11,81,-15,]),'ASSIGN':([9,],[30,]),'TIMES':([9,24,26,28,35,50,51,59,67,68,69,70,71,],[-38,47,-35,-39,-38,-36,-37,-40,47,47,-32,-33,-34,]),'DIVIDE':([9,24,26,28,35,50,51,59,67,68,69,70,71,],[-38,48,-35,-39,-38,-36,-37,-40,48,48,-32,-33,-34,]),'MODULUS':([9,24,26,28,35,50,51,59,67,68,69,70,71,],[-38,49,-35,-39,-38,-36,-37,-40,49,49,-32,-33,-34,]),'PLUS':([9,23,24,26,28,35,50,51,59,63,64,65,66,67,68,69,70,71,],[-38,45,-31,-35,-39,-38,-36,-37,-40,45,45,45,45,-29,-30,-32,-33,-34,]),'LESSTHAN':([9,20,23,24,26,28,35,50,51,59,61,62,63,64,65,66,67,68,69,70,71,],[-38,41,-28,-31,-35,-39,-38,-36,-37,-40,41,41,-24,-25,-26,-27,-29,-30,-32,-33,-34,]),'GREATERTHAN':([9,20,23,24,26,28,35,50,51,59,61,62,63,64,65,66,67,68,69,70,71,],[-38,42,-28,-31,-35,-39,-38,-36,-37,-40,42,42,-24,-25,-26,-27,-29,-30,-32,-33,-34,]),'LESSEQUAL':([9,20,23,24,26,28,35,50,51,59,61,62,63,64,65,66,67,68,69,70,71,],[-38,43,-28,-31,-35,-39,-38,-36,-37,-40,43,43,-24,-25,-26,-27,-29,-30,-32,-33,-34,]),'GREATEQUAL':([9,20,23,24,26,28,35,50,51,59,61,62,63,64,65,66,67,68,69,70,71,],[-38,44,-28,-31,-35,-39,-38,-36,-37,-40,44,44,-24,-25,-26,-27,-29,-30,-32,-33,-34,]),'EQUALTO':([9,19,20,23,24,26,28,35,50,51,59,62,63,64,65,66,67,68,69,70,71,],[-38,39,-23,-28,-31,-35,-39,-38,-36,-37,-40,-22,-24,-25,-26,-27,-29,-30,-32,-33,-34,]),'NOTEQUAL':([9,19,20,23,24,26,28,35,50,51,54,55,59,62,63,64,65,66,67,68,69,70,71,],[-38,40,-23,-28,-31,-35,-39,-38,-36,-37,40,40,-40,-22,-24,-25,-26,-27,-29,-30,-32,-33,-34,]),'AND':([9,10,19,20,23,24,26,28,34,35,36,37,38,50,51,53,54,55,59,61,62,63,64,65,66,67,68,69,70,71,],[-38,31,-20,-23,-28,-31,-35,-39,31,-38,31,31,31,-36,-37,31,-18,-19,-40,-21,-22,-24,-25,-26,-27,-29,-30,-32,-33,-34,]),'OR':([9,10,19,20,23,24,26,28,34,35,36,37,38,50,51,53,54,55,59,61,62,63,64,65,66,67,68,69,70,71,],[-38,32,-20,-23,-28,-31,-35,-39,32,-38,32,32,32,-36,-37,32,-18,-19,-40,-21,-22,-24,-25,-26,-27,-29,-30,-32,-33,-34,]),'SEMICOLON':([19,20,23,24,26,28,29,33,34,35,50,51,53,54,55,59,61,62,63,64,65,66,67,68,69,70,71,],[-20,-23,-28,-31,-35,-39,52,56,57,-38,-36,-37,72,-18,-19,-40,-21,-22,-24,-25,-26,-27,-29,-30,-32,-33,-34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([0,5,58,60,79,],[2,11,11,11,11,]),'action_new_scope':([3,],[4,]),'stmt_list':([4,],[5,]),'stmt':([5,58,60,79,],[7,73,74,80,]),'type':([5,58,60,79,],[8,8,8,8,]),'lowop':([5,13,14,15,16,30,58,60,79,],[10,34,36,37,38,53,10,10,10,]),'comment':([5,58,60,79,],[17,17,17,17,]),'equal':([5,13,14,15,16,30,31,32,58,60,79,],[19,19,19,19,19,19,54,55,19,19,19,]),'op':([5,13,14,15,16,30,31,32,39,40,58,60,79,],[20,20,20,20,20,20,20,20,61,62,20,20,20,]),'expr':([5,13,14,15,16,30,31,32,39,40,41,42,43,44,58,60,79,],[23,23,23,23,23,23,23,23,23,23,63,64,65,66,23,23,23,]),'term':([5,13,14,15,16,30,31,32,39,40,41,42,43,44,45,46,58,60,79,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,67,68,24,24,24,]),'factor':([5,13,14,15,16,25,27,30,31,32,39,40,41,42,43,44,45,46,47,48,49,58,60,79,],[26,26,26,26,26,50,51,26,26,26,26,26,26,26,26,26,26,26,69,70,71,26,26,26,]),'optelse':([73,],[75,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block','program',1,'p_program','LastLighthouse_parser.py',95),
  ('block -> LBRACE action_new_scope stmt_list RBRACE','block',4,'p_block','LastLighthouse_parser.py',102),
  ('action_new_scope -> <empty>','action_new_scope',0,'p_action_new_scope','LastLighthouse_parser.py',111),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list','LastLighthouse_parser.py',123),
  ('stmt_list -> <empty>','stmt_list',0,'p_stmt_list_empty','LastLighthouse_parser.py',131),
  ('stmt -> type ID SEMICOLON','stmt',3,'p_stmt_decl','LastLighthouse_parser.py',139),
  ('stmt -> ID ASSIGN lowop SEMICOLON','stmt',4,'p_stmt_assign','LastLighthouse_parser.py',156),
  ('stmt -> block','stmt',1,'p_stmt_block','LastLighthouse_parser.py',171),
  ('stmt -> READ ID SEMICOLON','stmt',3,'p_stmt_read','LastLighthouse_parser.py',178),
  ('stmt -> WRITE lowop SEMICOLON','stmt',3,'p_stmt_write','LastLighthouse_parser.py',193),
  ('stmt -> IF lowop LPAREN stmt optelse RPAREN','stmt',6,'p_stmt_if','LastLighthouse_parser.py',200),
  ('stmt -> WHILE lowop LPAREN stmt RPAREN','stmt',5,'p_stmt_while','LastLighthouse_parser.py',207),
  ('stmt -> lowop','stmt',1,'p_stmt_lowop','LastLighthouse_parser.py',213),
  ('stmt -> comment','stmt',1,'p_stmt_comment','LastLighthouse_parser.py',220),
  ('optelse -> ELSE LPAREN stmt RPAREN','optelse',4,'p_optelse_else','LastLighthouse_parser.py',226),
  ('optelse -> <empty>','optelse',0,'p_optelse_empty','LastLighthouse_parser.py',232),
  ('type -> INT','type',1,'p_type_int','LastLighthouse_parser.py',240),
  ('lowop -> lowop AND equal','lowop',3,'p_lowop_and','LastLighthouse_parser.py',248),
  ('lowop -> lowop OR equal','lowop',3,'p_lowop_or','LastLighthouse_parser.py',254),
  ('lowop -> equal','lowop',1,'p_lowop_equal','LastLighthouse_parser.py',260),
  ('lowop -> equal EQUALTO op','lowop',3,'p_equal_equalto','LastLighthouse_parser.py',268),
  ('equal -> equal NOTEQUAL op','equal',3,'p_equal_notequal','LastLighthouse_parser.py',274),
  ('equal -> op','equal',1,'p_equal_op','LastLighthouse_parser.py',280),
  ('op -> op LESSTHAN expr','op',3,'p_op_lessthan','LastLighthouse_parser.py',288),
  ('op -> op GREATERTHAN expr','op',3,'p_op_greaterthan','LastLighthouse_parser.py',294),
  ('op -> op LESSEQUAL expr','op',3,'p_op_lessequal','LastLighthouse_parser.py',300),
  ('op -> op GREATEQUAL expr','op',3,'p_op_greatequal','LastLighthouse_parser.py',306),
  ('op -> expr','op',1,'p_op_expr','LastLighthouse_parser.py',312),
  ('expr -> expr PLUS term','expr',3,'p_expr_plus','LastLighthouse_parser.py',320),
  ('expr -> expr MINUS term','expr',3,'p_expr_minus','LastLighthouse_parser.py',326),
  ('expr -> term','expr',1,'p_expr_term','LastLighthouse_parser.py',332),
  ('term -> term TIMES factor','term',3,'p_term_times','LastLighthouse_parser.py',340),
  ('term -> term DIVIDE factor','term',3,'p_term_divide','LastLighthouse_parser.py',346),
  ('term -> term MODULUS factor','term',3,'p_term_modulus','LastLighthouse_parser.py',352),
  ('term -> factor','term',1,'p_term_factor','LastLighthouse_parser.py',360),
  ('factor -> MINUS factor','factor',2,'p_factor_unaryminus','LastLighthouse_parser.py',369),
  ('factor -> UNARYNOT factor','factor',2,'p_factor_unarynot','LastLighthouse_parser.py',375),
  ('factor -> ID','factor',1,'p_factor_id','LastLighthouse_parser.py',381),
  ('factor -> NUM','factor',1,'p_factor_num','LastLighthouse_parser.py',397),
  ('factor -> LPAREN lowop RPAREN','factor',3,'p_factor_parens','LastLighthouse_parser.py',404),
  ('comment -> COMMENT','comment',1,'p_comment_comment','LastLighthouse_parser.py',410),
  ('comment -> MLCOMMENT','comment',1,'p_comment_mlcomment','LastLighthouse_parser.py',416),
]
