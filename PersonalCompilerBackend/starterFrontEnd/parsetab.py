
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN ID INT LBRACE LPAREN NUM PLUS RBRACE READ RPAREN SEMICOLON TIMES WRITE\n\tprogram : block\n\t\n\tblock : LBRACE stmt_list RBRACE\n\t\n\tstmt_list : stmt_list stmt\n\t\n\tstmt_list : \n\t\n\tstmt : type ID SEMICOLON\n\t\n    stmt : ID ASSIGN expr SEMICOLON\n\t\n\tstmt : block\n\t\n\tstmt : READ ID SEMICOLON\n\t\n\tstmt : WRITE expr SEMICOLON\n\t\n\ttype : INT\n\t\n\texpr : expr PLUS term\n\t\n\texpr : term\n\t\n\tterm : term TIMES factor\n\t\n\tterm : factor\n\t\n\tfactor : ID\n\t\n\tfactor : NUM\n\t\n\tfactor : LPAREN expr RPAREN\n\t'
    
_lr_action_items = {'LBRACE':([0,3,4,5,6,9,22,24,25,29,],[3,-4,3,-2,-3,-7,-5,-8,-9,-6,]),'$end':([1,2,5,],[0,-1,-2,]),'RBRACE':([3,4,5,6,9,22,24,25,29,],[-4,5,-2,-3,-7,-5,-8,-9,-6,]),'ID':([3,4,5,6,7,9,10,11,12,14,21,22,24,25,26,27,29,],[-4,8,-2,-3,13,-7,15,19,-10,19,19,-5,-8,-9,19,19,-6,]),'READ':([3,4,5,6,9,22,24,25,29,],[-4,10,-2,-3,-7,-5,-8,-9,-6,]),'WRITE':([3,4,5,6,9,22,24,25,29,],[-4,11,-2,-3,-7,-5,-8,-9,-6,]),'INT':([3,4,5,6,9,22,24,25,29,],[-4,12,-2,-3,-7,-5,-8,-9,-6,]),'ASSIGN':([8,],[14,]),'NUM':([11,14,21,26,27,],[20,20,20,20,20,]),'LPAREN':([11,14,21,26,27,],[21,21,21,21,21,]),'SEMICOLON':([13,15,16,17,18,19,20,23,30,31,32,],[22,24,25,-12,-14,-15,-16,29,-11,-13,-17,]),'PLUS':([16,17,18,19,20,23,28,30,31,32,],[26,-12,-14,-15,-16,26,26,-11,-13,-17,]),'RPAREN':([17,18,19,20,28,30,31,32,],[-12,-14,-15,-16,32,-11,-13,-17,]),'TIMES':([17,18,19,20,30,31,32,],[27,-14,-15,-16,27,-13,-17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([0,4,],[2,9,]),'stmt_list':([3,],[4,]),'stmt':([4,],[6,]),'type':([4,],[7,]),'expr':([11,14,21,],[16,23,28,]),'term':([11,14,21,26,],[17,17,17,30,]),'factor':([11,14,21,26,27,],[18,18,18,18,31,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block','program',1,'p_program','starter_parser.py',56),
  ('block -> LBRACE stmt_list RBRACE','block',3,'p_block','starter_parser.py',63),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list','starter_parser.py',71),
  ('stmt_list -> <empty>','stmt_list',0,'p_stmt_list_empty','starter_parser.py',79),
  ('stmt -> type ID SEMICOLON','stmt',3,'p_stmt_decl','starter_parser.py',87),
  ('stmt -> ID ASSIGN expr SEMICOLON','stmt',4,'p_stmt_assign','starter_parser.py',94),
  ('stmt -> block','stmt',1,'p_stmt_block','starter_parser.py',101),
  ('stmt -> READ ID SEMICOLON','stmt',3,'p_stmt_read','starter_parser.py',108),
  ('stmt -> WRITE expr SEMICOLON','stmt',3,'p_stmt_write','starter_parser.py',115),
  ('type -> INT','type',1,'p_type','starter_parser.py',122),
  ('expr -> expr PLUS term','expr',3,'p_expr_plus','starter_parser.py',130),
  ('expr -> term','expr',1,'p_expr_term','starter_parser.py',137),
  ('term -> term TIMES factor','term',3,'p_term_times','starter_parser.py',146),
  ('term -> factor','term',1,'p_term_factor','starter_parser.py',152),
  ('factor -> ID','factor',1,'p_factor_id','starter_parser.py',160),
  ('factor -> NUM','factor',1,'p_factor_num','starter_parser.py',168),
  ('factor -> LPAREN expr RPAREN','factor',3,'p_factor_parens','starter_parser.py',175),
]
