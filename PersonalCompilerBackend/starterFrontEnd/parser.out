Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> block
Rule 2     block -> LBRACE stmt_list RBRACE
Rule 3     stmt_list -> stmt_list stmt
Rule 4     stmt_list -> <empty>
Rule 5     stmt -> type ID SEMICOLON
Rule 6     stmt -> ID ASSIGN expr SEMICOLON
Rule 7     stmt -> block
Rule 8     stmt -> READ ID SEMICOLON
Rule 9     stmt -> WRITE expr SEMICOLON
Rule 10    type -> INT
Rule 11    expr -> expr PLUS term
Rule 12    expr -> term
Rule 13    term -> term TIMES factor
Rule 14    term -> factor
Rule 15    factor -> ID
Rule 16    factor -> NUM
Rule 17    factor -> LPAREN expr RPAREN

Terminals, with rules where they appear

ASSIGN               : 6
ID                   : 5 6 8 15
INT                  : 10
LBRACE               : 2
LPAREN               : 17
NUM                  : 16
PLUS                 : 11
RBRACE               : 2
READ                 : 8
RPAREN               : 17
SEMICOLON            : 5 6 8 9
TIMES                : 13
WRITE                : 9
error                : 

Nonterminals, with rules where they appear

block                : 1 7
expr                 : 6 9 11 17
factor               : 13 14
program              : 0
stmt                 : 3
stmt_list            : 2 3
term                 : 11 12 13
type                 : 5

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block
    (2) block -> . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 3

    program                        shift and go to state 1
    block                          shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> block .

    $end            reduce using rule 1 (program -> block .)


state 3

    (2) block -> LBRACE . stmt_list RBRACE
    (3) stmt_list -> . stmt_list stmt
    (4) stmt_list -> .

    RBRACE          reduce using rule 4 (stmt_list -> .)
    ID              reduce using rule 4 (stmt_list -> .)
    READ            reduce using rule 4 (stmt_list -> .)
    WRITE           reduce using rule 4 (stmt_list -> .)
    INT             reduce using rule 4 (stmt_list -> .)
    LBRACE          reduce using rule 4 (stmt_list -> .)

    stmt_list                      shift and go to state 4

state 4

    (2) block -> LBRACE stmt_list . RBRACE
    (3) stmt_list -> stmt_list . stmt
    (5) stmt -> . type ID SEMICOLON
    (6) stmt -> . ID ASSIGN expr SEMICOLON
    (7) stmt -> . block
    (8) stmt -> . READ ID SEMICOLON
    (9) stmt -> . WRITE expr SEMICOLON
    (10) type -> . INT
    (2) block -> . LBRACE stmt_list RBRACE

    RBRACE          shift and go to state 5
    ID              shift and go to state 8
    READ            shift and go to state 10
    WRITE           shift and go to state 11
    INT             shift and go to state 12
    LBRACE          shift and go to state 3

    stmt                           shift and go to state 6
    type                           shift and go to state 7
    block                          shift and go to state 9

state 5

    (2) block -> LBRACE stmt_list RBRACE .

    $end            reduce using rule 2 (block -> LBRACE stmt_list RBRACE .)
    RBRACE          reduce using rule 2 (block -> LBRACE stmt_list RBRACE .)
    ID              reduce using rule 2 (block -> LBRACE stmt_list RBRACE .)
    READ            reduce using rule 2 (block -> LBRACE stmt_list RBRACE .)
    WRITE           reduce using rule 2 (block -> LBRACE stmt_list RBRACE .)
    INT             reduce using rule 2 (block -> LBRACE stmt_list RBRACE .)
    LBRACE          reduce using rule 2 (block -> LBRACE stmt_list RBRACE .)


state 6

    (3) stmt_list -> stmt_list stmt .

    RBRACE          reduce using rule 3 (stmt_list -> stmt_list stmt .)
    ID              reduce using rule 3 (stmt_list -> stmt_list stmt .)
    READ            reduce using rule 3 (stmt_list -> stmt_list stmt .)
    WRITE           reduce using rule 3 (stmt_list -> stmt_list stmt .)
    INT             reduce using rule 3 (stmt_list -> stmt_list stmt .)
    LBRACE          reduce using rule 3 (stmt_list -> stmt_list stmt .)


state 7

    (5) stmt -> type . ID SEMICOLON

    ID              shift and go to state 13


state 8

    (6) stmt -> ID . ASSIGN expr SEMICOLON

    ASSIGN          shift and go to state 14


state 9

    (7) stmt -> block .

    RBRACE          reduce using rule 7 (stmt -> block .)
    ID              reduce using rule 7 (stmt -> block .)
    READ            reduce using rule 7 (stmt -> block .)
    WRITE           reduce using rule 7 (stmt -> block .)
    INT             reduce using rule 7 (stmt -> block .)
    LBRACE          reduce using rule 7 (stmt -> block .)


state 10

    (8) stmt -> READ . ID SEMICOLON

    ID              shift and go to state 15


state 11

    (9) stmt -> WRITE . expr SEMICOLON
    (11) expr -> . expr PLUS term
    (12) expr -> . term
    (13) term -> . term TIMES factor
    (14) term -> . factor
    (15) factor -> . ID
    (16) factor -> . NUM
    (17) factor -> . LPAREN expr RPAREN

    ID              shift and go to state 19
    NUM             shift and go to state 20
    LPAREN          shift and go to state 21

    expr                           shift and go to state 16
    term                           shift and go to state 17
    factor                         shift and go to state 18

state 12

    (10) type -> INT .

    ID              reduce using rule 10 (type -> INT .)


state 13

    (5) stmt -> type ID . SEMICOLON

    SEMICOLON       shift and go to state 22


state 14

    (6) stmt -> ID ASSIGN . expr SEMICOLON
    (11) expr -> . expr PLUS term
    (12) expr -> . term
    (13) term -> . term TIMES factor
    (14) term -> . factor
    (15) factor -> . ID
    (16) factor -> . NUM
    (17) factor -> . LPAREN expr RPAREN

    ID              shift and go to state 19
    NUM             shift and go to state 20
    LPAREN          shift and go to state 21

    expr                           shift and go to state 23
    term                           shift and go to state 17
    factor                         shift and go to state 18

state 15

    (8) stmt -> READ ID . SEMICOLON

    SEMICOLON       shift and go to state 24


state 16

    (9) stmt -> WRITE expr . SEMICOLON
    (11) expr -> expr . PLUS term

    SEMICOLON       shift and go to state 25
    PLUS            shift and go to state 26


state 17

    (12) expr -> term .
    (13) term -> term . TIMES factor

    SEMICOLON       reduce using rule 12 (expr -> term .)
    PLUS            reduce using rule 12 (expr -> term .)
    RPAREN          reduce using rule 12 (expr -> term .)
    TIMES           shift and go to state 27


state 18

    (14) term -> factor .

    TIMES           reduce using rule 14 (term -> factor .)
    SEMICOLON       reduce using rule 14 (term -> factor .)
    PLUS            reduce using rule 14 (term -> factor .)
    RPAREN          reduce using rule 14 (term -> factor .)


state 19

    (15) factor -> ID .

    TIMES           reduce using rule 15 (factor -> ID .)
    SEMICOLON       reduce using rule 15 (factor -> ID .)
    PLUS            reduce using rule 15 (factor -> ID .)
    RPAREN          reduce using rule 15 (factor -> ID .)


state 20

    (16) factor -> NUM .

    TIMES           reduce using rule 16 (factor -> NUM .)
    SEMICOLON       reduce using rule 16 (factor -> NUM .)
    PLUS            reduce using rule 16 (factor -> NUM .)
    RPAREN          reduce using rule 16 (factor -> NUM .)


state 21

    (17) factor -> LPAREN . expr RPAREN
    (11) expr -> . expr PLUS term
    (12) expr -> . term
    (13) term -> . term TIMES factor
    (14) term -> . factor
    (15) factor -> . ID
    (16) factor -> . NUM
    (17) factor -> . LPAREN expr RPAREN

    ID              shift and go to state 19
    NUM             shift and go to state 20
    LPAREN          shift and go to state 21

    expr                           shift and go to state 28
    term                           shift and go to state 17
    factor                         shift and go to state 18

state 22

    (5) stmt -> type ID SEMICOLON .

    RBRACE          reduce using rule 5 (stmt -> type ID SEMICOLON .)
    ID              reduce using rule 5 (stmt -> type ID SEMICOLON .)
    READ            reduce using rule 5 (stmt -> type ID SEMICOLON .)
    WRITE           reduce using rule 5 (stmt -> type ID SEMICOLON .)
    INT             reduce using rule 5 (stmt -> type ID SEMICOLON .)
    LBRACE          reduce using rule 5 (stmt -> type ID SEMICOLON .)


state 23

    (6) stmt -> ID ASSIGN expr . SEMICOLON
    (11) expr -> expr . PLUS term

    SEMICOLON       shift and go to state 29
    PLUS            shift and go to state 26


state 24

    (8) stmt -> READ ID SEMICOLON .

    RBRACE          reduce using rule 8 (stmt -> READ ID SEMICOLON .)
    ID              reduce using rule 8 (stmt -> READ ID SEMICOLON .)
    READ            reduce using rule 8 (stmt -> READ ID SEMICOLON .)
    WRITE           reduce using rule 8 (stmt -> READ ID SEMICOLON .)
    INT             reduce using rule 8 (stmt -> READ ID SEMICOLON .)
    LBRACE          reduce using rule 8 (stmt -> READ ID SEMICOLON .)


state 25

    (9) stmt -> WRITE expr SEMICOLON .

    RBRACE          reduce using rule 9 (stmt -> WRITE expr SEMICOLON .)
    ID              reduce using rule 9 (stmt -> WRITE expr SEMICOLON .)
    READ            reduce using rule 9 (stmt -> WRITE expr SEMICOLON .)
    WRITE           reduce using rule 9 (stmt -> WRITE expr SEMICOLON .)
    INT             reduce using rule 9 (stmt -> WRITE expr SEMICOLON .)
    LBRACE          reduce using rule 9 (stmt -> WRITE expr SEMICOLON .)


state 26

    (11) expr -> expr PLUS . term
    (13) term -> . term TIMES factor
    (14) term -> . factor
    (15) factor -> . ID
    (16) factor -> . NUM
    (17) factor -> . LPAREN expr RPAREN

    ID              shift and go to state 19
    NUM             shift and go to state 20
    LPAREN          shift and go to state 21

    term                           shift and go to state 30
    factor                         shift and go to state 18

state 27

    (13) term -> term TIMES . factor
    (15) factor -> . ID
    (16) factor -> . NUM
    (17) factor -> . LPAREN expr RPAREN

    ID              shift and go to state 19
    NUM             shift and go to state 20
    LPAREN          shift and go to state 21

    factor                         shift and go to state 31

state 28

    (17) factor -> LPAREN expr . RPAREN
    (11) expr -> expr . PLUS term

    RPAREN          shift and go to state 32
    PLUS            shift and go to state 26


state 29

    (6) stmt -> ID ASSIGN expr SEMICOLON .

    RBRACE          reduce using rule 6 (stmt -> ID ASSIGN expr SEMICOLON .)
    ID              reduce using rule 6 (stmt -> ID ASSIGN expr SEMICOLON .)
    READ            reduce using rule 6 (stmt -> ID ASSIGN expr SEMICOLON .)
    WRITE           reduce using rule 6 (stmt -> ID ASSIGN expr SEMICOLON .)
    INT             reduce using rule 6 (stmt -> ID ASSIGN expr SEMICOLON .)
    LBRACE          reduce using rule 6 (stmt -> ID ASSIGN expr SEMICOLON .)


state 30

    (11) expr -> expr PLUS term .
    (13) term -> term . TIMES factor

    SEMICOLON       reduce using rule 11 (expr -> expr PLUS term .)
    PLUS            reduce using rule 11 (expr -> expr PLUS term .)
    RPAREN          reduce using rule 11 (expr -> expr PLUS term .)
    TIMES           shift and go to state 27


state 31

    (13) term -> term TIMES factor .

    TIMES           reduce using rule 13 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 13 (term -> term TIMES factor .)
    PLUS            reduce using rule 13 (term -> term TIMES factor .)
    RPAREN          reduce using rule 13 (term -> term TIMES factor .)


state 32

    (17) factor -> LPAREN expr RPAREN .

    TIMES           reduce using rule 17 (factor -> LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 17 (factor -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 17 (factor -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 17 (factor -> LPAREN expr RPAREN .)

